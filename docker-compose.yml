services:
  database:
    image: postgres:14.15-alpine3.21
    container_name: kupipodaridai-database
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - kupipodaridaidb

  backend:
    build:
      context: ./backend
    container_name: kupipodaridai-backend
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: database
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - database
    networks:
      - kupipodaridai
      - kupipodaridaidb

  frontend:
    build:
      context: ./frontend
    container_name: kupipodaridai-frontend
    restart: always
    depends_on:
      - backend
    networks:
      - kupipodaridai

  nginx:
    image: nginx:1.27.3
    container_name: kupipodaridai-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - frontend
      - backend
    networks:
      - kupipodaridai

volumes:
  db_data:

networks:
  kupipodaridaidb:
  kupipodaridai: